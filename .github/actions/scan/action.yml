name: "Scan module"
description: 'Scan a module in a Maven Project.'
inputs:
  path:
    description: 'Path to the Maven project.'
    required: true
  repository:
    description: 'GitHub repository for the maven project.'
    required: true
  module:
    description: 'Module to be scanned.'
    required: true
  timeout:
    description: "Amount of time in seconds after which forked surefire and failsafe test processes should be killed or 
    0 if these test processes should never be timed out."
    required: true
  pomelo_timeout:
    description: "Amount of time in seconds after which forked pomelo test processes should be killed or 
    0 if these test processes should never be timed out."
    required: true
  report:
    description: "File to which the final report should be written."
    required: true
runs:
  using: "composite"
  steps:
    - name: Build Pomelo
      uses: ./pomelo/.github/actions/build
      with:
        path: ./pomelo
        skip_tests: true
    - name: Checkout project
      uses: actions/checkout@v3
      with:
        repository: ${{ inputs.repository }}
        path: project
    - name: Scan project
      env:
        JAVA_HOME: /usr/lib/jvm/jdk1.8.0_301/
        MAVEN_OPTS: >-
          -Dhttps.protocols=TLSv1.2 
          -Dorg.slf4j.simpleLogger.showDateTime=true 
          -Djava.awt.headless=true
          -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN
        POMELO_OPTS: >-
          -Dmaven.ext.class.path=pomelo/pomelo-maven-lifecycle/target/pomelo-maven-lifecycle-1.0.0-SNAPSHOT.jar
          -Dpomelo.phase=scan 
          -Dpomelo.scan.report=pomelo-scan.txt
          -Dpomelo.scan.timeout=${{ inputs.pomelo_timeout }}
          -Dsurefire.timeout=${{ inputs.timeout }}
          -Dfailsafe.timeout=${{ inputs.timeout }}
          -Dmaven.test.failure.ignore=true
      run: |
        mvn -f ${{ inputs.path }} -pl ${{ inputs.module }} -am install -DskipTests
        mvn -f ${{ inputs.path }} -pl ${{ inputs.module }} $POMELO_OPTS -B integration-test
        mv pomelo-scan.txt ${{ inputs.report }}
      shell: bash

